{"version":3,"file":"static/webpack/static\\development\\pages\\list\\playlist.js.206f5a33e27ec7969d2c.hot-update.js","sources":["webpack:///./components/List/Playlist.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport Link from 'next/link';\r\nimport LazyLoad from 'react-lazyload';\r\nimport { connect } from 'react-redux';\r\nimport { fetchListPlaylist } from '../../redux/actions/list';\r\n\r\nimport Header from '../Header'\r\nimport Loading from '../Loading'\r\nimport Img from '../Img'\r\n\r\nclass Playlist extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let {playlist} = props\r\n        \r\n        this.state = {\r\n            playlistData: playlist,\r\n            page: 0,\r\n            finished: false,\r\n            isFoot: true,\r\n        }\r\n    }\r\n      \r\n    static getDerivedStateFromProps(nextProps, prevState) {\r\n        if (nextProps.playlist && nextProps.playlist !== prevState.playlistData) {\r\n            return {\r\n                playlistData: nextProps.playlist,\r\n                isFoot: nextProps.more,\r\n                finished: !nextProps.more\r\n            };\r\n        }\r\n        \r\n        return null; \r\n    }\r\n\r\n    componentDidMount() {\r\n        if(this.props.isServer) {\r\n            this.props.fetchListPlaylist(0)\r\n        }\r\n    }\r\n\r\n    //接触屏幕\r\n    touchStart(e) {\r\n        this.startx = e.touches[0].pageX;\r\n        this.starty = e.touches[0].pageY;\r\n    }\r\n    //离开屏幕（[e.changedTouches][2]）\r\n    touchEnd(e) {\r\n        let endx, endy;\r\n        endx = e.changedTouches[0].pageX;\r\n        endy = e.changedTouches[0].pageY;\r\n        let direction = this.getDirection(this.startx, this.starty, endx, endy);\r\n        switch (direction) {\r\n            case 0:\r\n                // console.log(\"未滑动！\");\r\n                break;\r\n            case 1:\r\n                // console.log(\"向上！\");\r\n                this.loadData();\r\n                break;\r\n            case 2:\r\n                // console.log(\"向下！\");\r\n                break;\r\n            case 3:\r\n                // console.log(\"向左！\");\r\n                break;\r\n            case 4:\r\n                // console.log(\"向右！\");\r\n                break;\r\n            default:\r\n        }\r\n    }\r\n    //触摸点和离开点连线与[x轴角度][3]\r\n    getAngle(angx,angy) {\r\n        return Math.atan2(angy, angx) * 180 / Math.PI;\r\n    }\r\n    //根据接触和离开判断方向 1向上 2向下 3向左 4向右 0未发生滑动（[Math.abs][4]）\r\n    getDirection(startx, starty, endx, endy) {\r\n        let angx = endx - startx;\r\n        let angy = endy - starty;\r\n        let result = 0;\r\n\r\n        //如果滑动距离太短\r\n        if (Math.abs(angx) < 2 && Math.abs(angy) < 2) {\r\n            return result;\r\n        }\r\n        let angle = this.getAngle(angx, angy);\r\n        \r\n        if (angle >= -135 && angle <= -45) {\r\n            result = 1;\r\n        } else if (angle > 45 && angle < 135) {\r\n            result = 2;\r\n        } else if ((angle >= 135 && angle <= 180) || (angle >= -180 && angle < -135)) {\r\n            result = 3;\r\n        } else if (angle >= -45 && angle <= 45) {\r\n            result = 4;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    loadData() {\r\n        let {fetchListPlaylist} = this.props\r\n        \r\n        let dataHeight = this.refs.onPullUp.clientHeight;\r\n        let scrollHeight = document.body.scrollTop || document.documentElement.scrollTop;\r\n        let screenHeight = document.documentElement.clientHeight;\r\n        const h = 10;//自定义距离底部多少时concat数据\r\n        if (dataHeight - scrollHeight - h < screenHeight && this.state.isFoot) {\r\n            this.setState({\r\n                isFoot: false,\r\n                page: this.state.page + 1\r\n            }, () => {\r\n                fetchListPlaylist(this.state.page)\r\n            });\r\n        }\r\n    }\r\n    \r\n    render () {\r\n        let {playlistData, finished, isFoot} = this.state\r\n\r\n        return (\r\n            <div id=\"playlist\">\r\n                <Header title=\"推荐歌单\" />\r\n                <div className=\"scroll_wrapper\" ref=\"onPullUp\" onTouchStart={this.touchStart.bind(this)} onTouchEnd={this.touchEnd.bind(this)}>\r\n                    <ul className=\"list m-music__list\">\r\n                        {\r\n                            playlistData.map((play, i) => {\r\n                                let playCount = play.playCount > 100000 ? parseInt(play.playCount / 10000) + '万' : parseInt(play.playCount)\r\n                                \r\n                                return (\r\n                                    <li key={play.id}>\r\n                                        <div className=\"pic\">\r\n                                            {/* <LazyLoad height=\"3.72rem\" placeholder={<img src=\"/static/images/img_default.svg\" />}> */}\r\n                                                <Img imgUrl={play.coverImgUrl + '?param=400y400'} />\r\n                                            {/* </LazyLoad> */}\r\n                                            <span className=\"count\">\r\n                                                <i className=\"icon-headset\"></i>\r\n                                                <em>{playCount}</em>\r\n                                            </span>\r\n                                        </div>\r\n                                        <p className=\"desc\">{play.name}</p>\r\n                                        <Link href={{ pathname: '/detail/playlist', query: { id: play.id } }}>\r\n                                            <a className=\"mask\"></a>\r\n                                        </Link>\r\n                                    </li>\r\n                                )\r\n                            })\r\n                        }\r\n                    </ul>\r\n                    {\r\n                        !finished ? (\r\n                            playlistData.length && isFoot ? <p className=\"scroll-tip\">上拉加载更多</p> : <Loading />\r\n                        ) : (\r\n                            <p className=\"scroll-tip\">我是有底线的</p>\r\n                        )\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    playlist: state.list.playlist.playlists,\r\n    more:  state.list.playlist.more\r\n});\r\n  \r\nconst mapDispatchToProps = dispatch => ({\r\n    fetchListPlaylist(page) {\r\n      dispatch(fetchListPlaylist(page));\r\n    }\r\n});\r\n  \r\nexport default connect(mapStateToProps, mapDispatchToProps)(Playlist);\r\n  "],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AADA;AAKA;AACA;AACA;AACA;AACA;AAJA;AALA;AAWA;AACA;;;AAaA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAjBA;AAmBA;AACA;;;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;;;AAzIA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;;;;AAxBA;AACA;AAwJA;AACA;AACA;AAAA;AACA;AACA;AAFA;AAAA;AACA;AAIA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AACA;AAKA;;;;A","sourceRoot":""}