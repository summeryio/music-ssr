{"version":3,"file":"static/webpack/static\\development\\pages\\detail\\playlist.js.ca01e92e7f695ca5f51d.hot-update.js","sources":["webpack:///./components/Detail/Playlist.js"],"sourcesContent":["import React, { Component } from 'react'\r\nimport { withRouter } from 'next/router'\r\nimport { connect } from 'react-redux';\r\nimport { fetchDetailPlaylist } from '../../redux/actions/detail';\r\n\r\nimport {formatDateYMD} from '../../core/util'\r\nimport Header from '../Header'\r\nimport Loading from '../Loading'\r\nimport Img from '../Img'\r\nimport SongList from '../SongList'\r\n\r\nclass Playlist extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        \r\n        // const { router: { query } } = props;\r\n\r\n        this.state = {\r\n            playlistData: props.playlist\r\n        }\r\n    }\r\n\r\n    static getDerivedStateFromProps(nextProps, prevState) {\r\n        if (nextProps.playlist && nextProps.playlist !== prevState.playlistData) {\r\n            return {\r\n                playlistData: nextProps.playlist\r\n            };\r\n        }\r\n        \r\n        return null; \r\n    }\r\n\r\n    componentDidMount() {\r\n        const { router: { query } } = this.props;\r\n        \r\n        if (this.props.isServer) {\r\n            fetchDetailPlaylist(query.id)\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        let {playlistData} = this.state\r\n        \r\n        return (\r\n            <div id=\"playlist_detail\">\r\n                <Header title=\"\"/>\r\n                {\r\n                    Object.keys(playlistData).length ? (\r\n                        <div>\r\n                            <div className=\"header\">\r\n                                <div className=\"bg\" style={{backgroundImage: `url(${playlistData.coverImgUrl + '?param=400y400'})`}}></div>\r\n                                <div className=\"cont\">\r\n                                    <img src={playlistData.coverImgUrl + '?param=400y400'} />\r\n                                    <div className=\"info\">\r\n                                        <p>{playlistData.name}</p>\r\n                                        <p>{playlistData.creator.nickname}</p>\r\n                                        <p>创建时间：{formatDateYMD(playlistData.createTime)}</p>\r\n                                    </div>\r\n                                </div>\r\n                                {/* <PlayAll songs={playlistData.tracks} /> */}\r\n                            </div>\r\n                            <SongList songs={playlistData.tracks} />\r\n                         </div>\r\n                    ) : <Loading full={true}/>\r\n                }\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    playlist: state.detail.playlist.playlists\r\n});\r\n  \r\nconst mapDispatchToProps = dispatch => ({\r\n    fetchDetailPlaylist(id) {\r\n      dispatch(fetchDetailPlaylist(id));\r\n    }\r\n});\r\n  \r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Playlist));"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAGA;AACA;AADA;AALA;AAQA;AACA;;;AAWA;AAAA;AACA;AAEA;AACA;AACA;AACA;;;AAEA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;AA9CA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;;;;AAnBA;AACA;AA4DA;AAAA;AACA;AADA;AAAA;AACA;AAGA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AACA;AAKA;;;;A","sourceRoot":""}