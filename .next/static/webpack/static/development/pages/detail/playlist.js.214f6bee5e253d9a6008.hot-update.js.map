{"version":3,"file":"static/webpack/static/development/pages/detail/playlist.js.214f6bee5e253d9a6008.hot-update.js","sources":["webpack:///./components/Detail/Playlist.js","webpack:///./core/util.js"],"sourcesContent":["import React, { Component } from 'react'\nimport { withRouter } from 'next/router'\nimport { connect } from 'react-redux';\nimport { fetchDetailPlaylist } from '../../redux/actions/detail';\n\nimport {formatDateYMD} from '../../core/util'\nimport Header from '../Header'\nimport Loading from '../Loading'\nimport Img from '../Img'\nimport SongList from '../SongList'\n\nclass Playlist extends Component {\n    constructor(props) {\n        super(props)\n        \n        // const { router: { query } } = props;\n\n        this.state = {\n            playlistData: {}\n        }\n    }\n\n    static getDerivedStateFromProps(nextProps, prevState) {\n        if (nextProps.playlist && nextProps.playlist !== prevState.playlistData) {\n            return {\n                playlistData: nextProps.playlist\n            };\n        }\n        \n        return null; \n    }\n\n    componentDidMount() {\n        const { router: { query } } = this.props;\n        \n        fetchDetailPlaylist(query.id)\n    }\n    \n    render() {\n        let {playlistData} = this.state\n        \n        return (\n            <div id=\"playlist_detail\">\n                <Header title=\"歌单\"/>\n                {\n                    Object.keys(playlistData).length ? (\n                        <div>\n                            <div className=\"header\">\n                                <div className=\"bg\" style={{backgroundImage: `url(${playlistData.coverImgUrl + '?param=400y400'})`}}></div>\n                                <div className=\"cont\">\n                                    <img src={playlistData.coverImgUrl + '?param=400y400'} />\n                                    <div className=\"info\">\n                                        <p>{playlistData.name}</p>\n                                        <p>{playlistData.creator.nickname}</p>\n                                        <p>创建时间：{formatDateYMD(playlistData.createTime)}</p>\n                                    </div>\n                                </div>\n                                {/* <PlayAll songs={playlistData.tracks} /> */}\n                            </div>\n                            <SongList songs={playlistData.tracks} />\n                         </div>\n                    ) : <Loading full={true}/>\n                }\n                \n            </div>\n        )\n    }\n}\n\n\nconst mapStateToProps = state => ({\n    playlist: state.detail.playlist.playlists\n});\n  \nconst mapDispatchToProps = dispatch => ({\n    fetchDetailPlaylist(id) {\n      dispatch(fetchDetailPlaylist(id));\n    }\n});\n  \nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Playlist));","/**\n * \n * @param {要拆分的数组} arr \n * @param {拆分的数组中length} len \n */\nexport function splitArray(arr, len) {\n    let result = []\n\n    for (let i = 0; i < arr.length; i += len) {\n        result.push(arr.slice(i, i + len))\n    }\n\n    return result\n}\n\n// 格式化时间戳成 年-月-日\nexport function formatDateYMD(timestamp) {\n    let ts = timestamp || new Date().getTime()\n    let year = new Date(ts).getFullYear()\n    let month = new Date(ts).getMonth() + 1 > 9 ? new Date(ts).getMonth() + 1 : '0' + (new Date(ts).getMonth() + 1)\n    let day = new Date(ts).getDate() > 9 ? new Date(ts).getDate() : '0' + new Date(ts).getDate()\n\n    return year + '-' + month + '-' + day\n}\n\n// 格式化时间戳成 月-日\nexport function formatDate(timestamp) {\n    let ts = timestamp || new Date().getTime()\n    let month = new Date(ts).getMonth() + 1 > 9 ? new Date(ts).getMonth() + 1 : '0' + (new Date(ts).getMonth() + 1)\n    let day = new Date(ts).getDate() > 9 ? new Date(ts).getDate() : '0' + new Date(ts).getDate()\n\n    return month + '月' + day + '日'\n}\n\n// 格式化时间戳成 时-分\nexport function formatDateHM(timestamp) {\n    let ts = timestamp\n    let min = new Date(ts).getMinutes() > 9 ? new Date(ts).getMinutes() : '0' + (new Date(ts).getMinutes())\n    let sed = new Date(ts).getSeconds() > 9 ? new Date(ts).getSeconds() : '0' + new Date(ts).getSeconds()\n\n    return min + ':' + sed\n}\n\n/**\n * 格式化评论日期\n * @param {时间戳} ts \n */\nexport function formatCommentDate(ts) {\n    let getDate = new Date(ts)\n    let year = getDate.getFullYear()\n    let month = getDate.getMonth() + 1\n    let day = getDate.getDate()\n    let hour = getDate.getHours() > 9 ? getDate.getHours() : '0' + getDate.getHours()\n    let min = getDate.getMinutes() > 9 ? getDate.getMinutes() : '0' + getDate.getMinutes()\n    \n    if (isThisYear(ts)) { // 今年\n        if (isYestday(ts) || isToday(ts)) { // 今天||昨天\n            if (isYestday(ts)) { // 昨天\n                return '昨天' + hour + ':' + min\n            } else { // 今天\n                if (isHour(ts)) { // 一小时内\n                    if (isMinute(ts)) { // 一分钟内\n                        return '刚刚'\n                    } else {\n                        let minLeft = new Date(new Date().getTime() - ts).getMinutes()\n                        \n                        return minLeft + '分钟前'\n                    }\n                } else {\n                    return hour + ':' + min\n                }\n            }\n        } else {\n            return month + '月' + day + '日' + hour + ':' + min\n        }\n    } else {\n        return year + '年' + month + '月' + day + '日'\n    }\n\n    function isThisYear(timestamp) {\n        return new Date(timestamp).getFullYear() === new Date().getFullYear()\n    }\n    \n    function isYestday(timestamp) {\n        let nowDate = new Date()\n        let todayTamp = new Date(nowDate.getFullYear(), nowDate.getMonth(), nowDate.getDate()).getTime()\n        let yestdayTamp = new Date(todayTamp - 24*3600*1000).getTime();\n    \n        return timestamp < todayTamp && yestdayTamp <= timestamp\n    }\n    \n    function isToday(timestamp) {\n        let nowDate = new Date()\n        let todayTamp = new Date(nowDate.getFullYear(), nowDate.getMonth(), nowDate.getDate()).getTime()\n        let nowTamp = new Date().getTime()\n    \n        return timestamp >= todayTamp && timestamp < nowTamp\n    }\n    \n    function isHour(timestamp) {\n        let nowTamp = new Date().getTime()\n    \n        return nowTamp - timestamp < 3600000\n    }\n    \n    function isMinute(timestamp) {\n        let nowTamp = new Date().getTime()\n    \n        return nowTamp - timestamp < 60000\n    }\n}\n\n\n// 将字符串中的换行符替换\nexport function formatStringLine(str) {\n    return str.replace(/\\n/g, '<br />')\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAGA;AACA;AADA;AALA;AAQA;AACA;;;AAWA;AAAA;AACA;AAEA;AACA;;;AAEA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;AA5CA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;;;;AAnBA;AACA;AA0DA;AAAA;AACA;AADA;AAAA;AACA;AAGA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AACA;AAKA;;;;;;;;;;;;AChFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;;;;A","sourceRoot":""}